import 'package:flutter/material.dart';
import 'package:task_manager/Task_edit.dart';
import 'package:task_manager/Task_Details.dart';
import 'package:task_manager/task_create1.dart';
import 'task_model.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:dio/dio.dart';
import 'package:flutter/src/material/dropdown.dart';


class TaskView extends StatefulWidget {
  const TaskView({super.key});

  @override
  State<TaskView> createState() => _TaskViewState();
}

class _TaskViewState extends State<TaskView> {
    List<Map<String, String>> projects = [];
  final dio = Dio();
  @override
 void initState() {
    super.initState();
    fetchProjectData();
  }

  Future<void> fetchProjectData() async {
    try {
      final response = await dio.get('http://localhost:5000/view_project');

      if (response.statusCode == 200) {
        final List<dynamic> jsonData = response.data;
       final List<Map<String, String>> projectData = jsonData.map((data) {
  return {
    'project_id': data['project_id'].toString(),
    'project_name': data['project_name'] as String, // Explicit cast
  };
}).toList();

        setState(() {
          projects = projectData;
        });
      }
    } catch (e) {
      print('Dio error: $e');
    }
  }


  @override
  Widget build(BuildContext context) {
    return  Scaffold(
      appBar: AppBar(
        title:  Text("Task Manager"),
      ),
      body: SafeArea(
        child: Column(
          children: [
            Row(
              children: [
               /* Expanded(
                  child DropdownButton<String>(
                  value: selectedDropdownValue,
                  onChanged: (String? newValue) {
                    setState(() {
                      selectedDropdownValue = newValue!;
                    });
                  },
                  items: projectIds.map((String item) {
                    return DropdownMenuItem<String>(
                      value: item,
                      child: Text(item),
                    );
                  }).toList(),
                ),
                ),*/
               
              ],
            ),
       Expanded(
              child:ListView.builder(
        itemCount: projects.length,
        itemBuilder: (context, index) {
          final project = projects[index];
          return ListTile(
            title: Text(project['project_id']!),
            subtitle: Text(project['project_name']!),
            onTap: () {
              // Handle the onTap event for the list item.
            },
          );
        },
      ),
            ),
          ],
        ),
      ),
       floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => taskCreateForm()),
          );
        },
      ),
    );
  }
}